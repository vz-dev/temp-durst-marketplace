<?php
/**
 * Durst - project - Base64ToFileHelper.php.
 *
 * Initial version by:
 * User: Mathias Bicker, <mathias.bicker@durst.shop>
 * Date: 2019-05-16
 * Time: 08:39
 */

namespace Pyz\Zed\Sales\Business\Helper;

use Pyz\Zed\Sales\Business\Exception\InvalidBase64StringException;
use Pyz\Zed\Sales\Business\Exception\UnableToCreateSignatureUploadDirectoryException;
use Pyz\Zed\Sales\SalesConfig;

class Base64ToFileHelper implements Base64ToFileHelperInterface
{
    protected const FILE_OPEN_MODE = 'wb';

    /**
     * @var \Pyz\Zed\Sales\SalesConfig
     */
    protected $config;

    /**
     * Base64ToFileHelper constructor.
     *
     * @param \Pyz\Zed\Sales\SalesConfig $config
     */
    public function __construct(SalesConfig $config)
    {
        $this->config = $config;
    }

    /**
     * {@inheritDoc}
     *
     * @param string $base64String
     * @throws \Pyz\Zed\Sales\Business\Exception\InvalidBase64StringException
     * @return string
     */
    public function storeStringAsFile(string $base64String): string
    {
        $this->checkDirectory($this->config->getSignatureUploadPath());

        $filePath = $this->generateFilePath();

        $imageData = base64_decode($base64String);

        if ($imageData === false) {
            throw new InvalidBase64StringException(InvalidBase64StringException::MESSAGE);
        }

        $filePointer = fopen(
            $filePath,
            self::FILE_OPEN_MODE
        );

        fwrite(
            $filePointer,
            $imageData
        );

        fclose($filePointer);

        return $filePath;
    }

    /**
     * @return string
     */
    protected function generateFilePath(): string
    {
        return sprintf(
            '%s/%s.jpg',
            $this->config->getSignatureUploadPath(),
            $this->generateUniqueFileName()
        );
    }

    /**
     * @return string
     */
    protected function generateUniqueFileName(): string
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @param string $directory
     *
     * @throws \Pyz\Zed\Sales\Business\Exception\UnableToCreateSignatureUploadDirectoryException
     *
     * @return void
     */
    protected function checkDirectory(string $directory): void
    {
        if (is_dir($directory) !== true) {
            $success = mkdir($directory, 0755, true);

            if ($success !== true) {
                throw new UnableToCreateSignatureUploadDirectoryException(
                    sprintf(
                        UnableToCreateSignatureUploadDirectoryException::MESSAGE,
                        $directory
                    )
                );
            }
        }
    }
}
